{"version":3,"sources":["base/globalStyles.js","templates/workspace/index.js","atoms/card/index.styles.js","atoms/card/index.js","molecules/questionContainer/index.styles.js","molecules/questionContainer/index.js","atoms/combobox/index.js","molecules/checkboxList/index.styles.js","molecules/checkboxList/index.js","organisms/questionnaire/index.js","data/client.js","utils/qaManager/index.js","utils/checklistGenerator/index.js","atoms/checklist/index.styles.js","atoms/checklist/ChecklistItem.js","atoms/checklist/ChecklistGroup.js","utils/useGiphy/index.js","organisms/guide/index.js","pages/packHelper/index.js","App.js","serviceWorker.js","index.js"],"names":["css","theme","default","font","fontSize","AppBar","props","Box","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","Workspace","useState","showSidebar","setShowSidebar","fill","Heading","level","margin","Button","icon","Notification","onClick","flex","overflow","horizontal","mainBox","size","Layer","FormClose","Collapsible","open","width","CardContainer","card","boxShadowColor","maxHeight","padding","CardHeader","header","borderBottom","CardBody","Card","Icon","children","onIconClick","showHeader","QaSeparator","QaContainer","QuestionContainer","marginLeft","color","label","Combobox","Select","valueKey","o","value","labelKey","options","selectedOption","onChange","option","CheckboxesContainer","CheckboxesWrapper","CheckBoxList","map","key","CheckBox","checked","event","setChecked","target","Questionnaire","weatherQuestion","selectedWeather","setSelectedWeather","activitiesQuestion","activityOptionsState","setActivityOptionsState","onActivityChecked","activity","checkedState","updated","x","primary","type","hoverIndicator","onCompleted","filter","activities","Climbing","Hiking","Cooking","loadActivities","getActiviesKeyVal","i","activity_ID","activity_name","filterByConditions","selectedConditions","entry","conditionsSet","apropriate_conditions","l","length","primitiveArraysEqual","filterEquipment","selectedActivitiesId","filtered","includes","y","equipment","flattenedList","concat","finalList","currentItem","duplicates","item","push","reduce","prev","curr","essential","a","b","sort","GroupContainer","StrikeableText","isStriked","ChecklistItem","text","isChecked","e","ChecklistGroup","title","items","newState","useGiphy","query","results","setResults","loading","setLoading","successful","setSuccessful","useEffect","randomOffset","Math","floor","random","fetch","response","json","data","images","preview","mp4","fetchData","Guide","isQuestionnaireComplete","setIsQuestionnaireComplete","setFinalList","onQuestionnaireComplete","weather","equipmentList","clothingList","allActivities","shelters","Shelter","clothing","Clothing","matchedEquipment","matchedShelter","matchedGear","filterGear","list","shelter","shelter_name","gear_name","updateCheckedItems","id","category","processed","height","marginTop","display","PackHelper","App","styles","globalStyles","Grommet","full","ResponsiveContext","Consumer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.548331a7.chunk.js","sourcesContent":["import { css } from '@emotion/core';\nimport theme from 'base/theme';\n\nexport default css`\n  html {\n    font-family: ${theme.default.font};\n    font-size: ${theme.default.fontSize};\n  }\n  body {\n    margin: 0;\n    padding: 0;\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Button, Collapsible, Heading, Layer } from 'grommet';\nimport { FormClose, Notification } from 'grommet-icons';\n\nconst AppBar = props => (\n  <Box\n    tag=\"header\"\n    direction=\"row\"\n    align=\"center\"\n    justify=\"between\"\n    background=\"brand\"\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n    elevation=\"medium\"\n    style={{ zIndex: '1' }}\n    {...props}\n  />\n);\n\nfunction Workspace(props) {\n  Workspace.propTypes = {\n    size: PropTypes.any,\n    mainBox: PropTypes.node\n  };\n\n  const [showSidebar, setShowSidebar] = useState(false);\n\n  return (\n    <Box fill>\n      <AppBar>\n        <Heading level=\"4\" margin=\"none\">\n          Packwise\n        </Heading>\n        <Button\n          icon={<Notification />}\n          onClick={() => setShowSidebar(!showSidebar)}\n        />\n      </AppBar>\n      <Box direction=\"row\" flex overflow={{ horizontal: 'hidden' }}>\n        <Box flex align=\"center\" justify=\"center\">\n          {props.mainBox}\n        </Box>\n        {!showSidebar || props.size !== 'small' ? (\n          <Collapsible direction=\"horizontal\" open={showSidebar}>\n            <Box\n              flex\n              width=\"medium\"\n              background=\"light-2\"\n              elevation=\"small\"\n              align=\"center\"\n              justify=\"center\"\n            >\n              sidebar\n            </Box>\n          </Collapsible>\n        ) : (\n          <Layer>\n            <Box\n              background=\"light-2\"\n              tag=\"header\"\n              justify=\"end\"\n              align=\"center\"\n              direction=\"row\"\n            >\n              <Button\n                icon={<FormClose />}\n                onClick={() => setShowSidebar(false)}\n              />\n            </Box>\n            <Box fill background=\"light-2\" align=\"center\" justify=\"center\">\n              sidebar\n            </Box>\n          </Layer>\n        )}\n      </Box>\n    </Box>\n  );\n}\n\nexport default Workspace;\n","import styled from '@emotion/styled';\n\nconst CardContainer = styled('section')`\n  box-sizing: border-box;\n  box-shadow: 0rem 0.0625rem 0.125rem\n    ${props =>\n      props.theme.card.boxShadowColor\n        ? props.theme.card.boxShadowColor\n        : 'rgba(0, 0, 0, 0.45)'};\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  max-height: ${props =>\n    props.theme.card.maxHeight ? props.theme.card.maxHeight : '700px'};\n  margin: ${props => (props.margin ? props.margin : '0')};\n  padding: ${props => (props.padding ? props.padding : '0')};\n`;\n\nconst CardHeader = styled('header')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${props => props.theme.card.header.borderBottom};\n  padding: 0.5rem 1rem;\n`;\n\nconst CardBody = styled('div')`\n  height: 100%;\n  overflow: auto;\n  margin: ${props => (props.margin ? props.margin : '0')};\n  padding: ${props => (props.padding ? props.padding : '0 1rem')};\n`;\n\nexport { CardContainer, CardHeader, CardBody };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  CardContainer,\n  CardHeader,\n  CardBody\n} from 'atoms/card/index.styles';\n\nfunction Card(props) {\n  Card.propTypes = {\n    children: PropTypes.node.isRequired,\n    header: PropTypes.string.isRequired,\n    onIconClick: PropTypes.func.isRequired,\n    Icon: PropTypes.node.isRequired,\n    showHeader: PropTypes.bool.isRequired\n  };\n\n  const { Icon, children, header, onIconClick, showHeader } = props;\n\n  return (\n    <CardContainer>\n      {showHeader && (\n        <CardHeader>\n          <span>{header}</span>\n          <Icon onClick={onIconClick} />\n        </CardHeader>\n      )}\n      <CardBody>{children}</CardBody>\n    </CardContainer>\n  );\n}\n\nexport default Card;\n","import styled from '@emotion/styled';\n\nconst QaSeparator = styled('section')`\n  margin: ${props => (props.margin ? props.margin : '1rem')};\n  padding: ${props => (props.padding ? props.padding : '0')};\n`;\n\nconst QaContainer = styled('div')`\n  height: 100%;\n  overflow: auto;\n  margin: ${props => (props.margin ? props.margin : '0')};\n  padding: ${props => (props.padding ? props.padding : '0 1rem')};\n`;\n\nexport { QaSeparator, QaContainer };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Heading } from 'grommet';\nimport { QaContainer, QaSeparator } from './index.styles';\n\nfunction QuestionContainer(props) {\n  QuestionContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n    label: PropTypes.string.isRequired\n  };\n  return (\n    <QaContainer>\n      <Heading style={{marginLeft:0}} color={{\"dark\": \"light-1\", \"light\": \"dark-2\"}} margin=\"small\" level={2}>\n        {props.label}\n      </Heading>\n      <QaSeparator />\n      {props.children}\n    </QaContainer>\n  );\n}\n\nexport default QuestionContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from 'grommet';\n\nfunction Combobox(props) {\n  Combobox.propTypes = {\n    selectedOption: PropTypes.any,\n    options: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n  \n  return (\n    <Select\n      valueKey={o => o.value}\n      labelKey={o => o.label}\n      options={props.options}\n      value={props.selectedOption}\n      onChange={({ option }) => props.onChange(option)}\n    />\n  );\n}\n\nexport default Combobox;\n","import styled from '@emotion/styled';\n\nconst CheckboxesContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: auto;\n  margin: ${props => (props.margin ? props.margin : '0')};\n  padding: ${props => (props.padding ? props.padding : '0 1rem')};\n`;\n\nconst CheckboxesWrapper = styled('div')`\n  margin-top: ${props => (props.margin ? props.margin : '0.3em')};\n`;\nexport { CheckboxesContainer, CheckboxesWrapper };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CheckBox } from 'grommet';\nimport { CheckboxesContainer, CheckboxesWrapper } from './index.styles';\n\nfunction CheckBoxList(props) {\n  CheckBoxList.propTypes = {\n    setChecked: PropTypes.func.isRequired,\n    options: PropTypes.arrayOf(\n      PropTypes.shape({\n        value: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        checked: PropTypes.bool\n      })\n    ).isRequired\n  };\n\n  return (\n    <CheckboxesContainer>\n      {props.options.map(o => (\n        <CheckboxesWrapper key={o.value}>\n          <CheckBox\n            checked={o.checked || false}\n            label={o.label}\n            onChange={event => props.setChecked(o.value, event.target.checked)}\n          />\n        </CheckboxesWrapper>\n      ))}\n    </CheckboxesContainer>\n  );\n}\n\nexport default CheckBoxList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'atoms/card';\nimport QuestionContainer from 'molecules/questionContainer';\nimport Combobox from 'atoms/combobox';\nimport CheckboxList from 'molecules/checkboxList';\nimport { Button } from 'grommet';\nimport { QaSeparator } from 'molecules/questionContainer/index.styles';\n\nfunction Questionnaire(props) {\n  Questionnaire.propTypes = {\n    weatherQuestion: PropTypes.shape({\n      label: PropTypes.string,\n      options: PropTypes.array.isRequired\n    }),\n    activitiesQuestion: PropTypes.shape({\n      label: PropTypes.string,\n      options: PropTypes.array.isRequired\n    }),\n    onCompleted: PropTypes.func.isRequired\n  };\n  const [selectedWeather, setSelectedWeather] = useState(\n    props.weatherQuestion.options[0]\n  );\n  const [activityOptionsState, setActivityOptionsState] = useState(\n    props.activitiesQuestion.options\n  );\n\n  function onActivityChecked(activity, checkedState) {\n    let updated = activityOptionsState.map(x =>\n      x.value === activity ? { ...x, checked: checkedState } : x\n    );\n    setActivityOptionsState(updated);\n  }\n\n  return (\n    <Card\n      header={\n        'Answer these questions to get a packing list appropriate to your activities'\n      }\n    >\n      <QuestionContainer label={props.weatherQuestion.label}>\n        <Combobox\n          options={props.weatherQuestion.options}\n          selectedOption={selectedWeather}\n          onChange={o => setSelectedWeather(o)}\n        />\n      </QuestionContainer>\n      <QaSeparator margin=\"14px\" />\n      <QuestionContainer label={props.activitiesQuestion.label}>\n        <CheckboxList\n          options={activityOptionsState}\n          setChecked={(o, checkedState) => onActivityChecked(o, checkedState)}\n        />\n      </QuestionContainer>\n      <Button\n        margin=\"medium\"\n        label=\"Submit\"\n        primary={true}\n        type=\"submit\"\n        hoverIndicator={true}\n        onClick={() => {\n          props.onCompleted(\n            selectedWeather.value,\n            activityOptionsState.filter(x => x.checked)\n          );\n        }}\n      />\n    </Card>\n  );\n}\n\nexport default Questionnaire;\n","import Climbing from './activity/activity_climbing';\nimport Hiking from './activity/activity_hiking';\nimport Cooking from './activity/activity_cooking';\n\nimport Shelter from './shelter/shelter';\nimport Clothing from './clothing/clothing';\n\nlet activities = [...Climbing, ...Hiking, ...Cooking];\n\nexport function loadActivities() {\n  return activities;\n}\n\nexport function loadShelters() {\n  return Shelter;\n}\n\nexport function loadClothing() {\n  return Clothing;\n}\n","import { loadActivities } from '../../data/client';\n\n// TODO get this from a weather API by specifying time and location\nexport function genWeatherQuestion() {\n  return {\n    label: 'what will the weather be like?',\n    options: [\n      {\n        label: 'Sunny',\n        value: ['sunny']\n      },\n      {\n        label: 'Rainy',\n        value: ['rain']\n      },\n      {\n        label: 'Rainy & Windy',\n        value: ['rain', 'strong_wind']\n      },\n      {\n        label: 'Snowy',\n        value: ['snow']\n      }\n    ]\n  };\n}\n\nfunction getActiviesKeyVal(i) {\n  return {\n    value: i.activity_ID,\n    label: i.activity_name\n  };\n}\n// TODO: request from packwise-data repo\nexport function genActivities() {\n  let options = loadActivities().map(getActiviesKeyVal);\n\n  return {\n    label: 'What activities do you plan to do',\n    options: options\n  };\n}\n","// for now this logic will live on the client-side\n\nexport function filterByConditions(options, selectedConditions) {\n  let filtered = options.filter(function(entry) {\n    let conditionsSet = entry.apropriate_conditions;\n    for (var i = 0, l = conditionsSet.length; i < l; i++) {\n      let set = conditionsSet[i];\n      if (primitiveArraysEqual(set, selectedConditions)) return true;\n    }\n    return false;\n  });\n  return filtered;\n}\n\nexport function filterShelters(options, selectedConditions) {\n  return filterByConditions(options, selectedConditions);\n}\n\nexport function filterGear(options, selectedConditions) {\n  return filterByConditions(options, selectedConditions);\n}\n\nexport function filterEquipment(options, selectedActivitiesId = []) {\n  // no selected activities\n  if (selectedActivitiesId.length === 0) return [];\n  let filtered = options\n    .filter(x => selectedActivitiesId.includes(x.activity_ID))\n    .map(y => y.equipment);\n  // no matching activities\n  if (filtered.length === 0) return [];\n  let flattenedList = [].concat(...filtered);\n  let finalList = [];\n\n  // loop items in every other activity\n  for (var y = 0; y < flattenedList.length; y++) {\n    let currentItem = flattenedList[y];\n    // check if item already exists\n    let duplicates = finalList.filter(x => x.item === currentItem.item);\n    if (duplicates.length === 0) {\n      finalList.push(currentItem);\n    } else {\n      // reduce duplicates\n      let isAlreadyEssential = duplicates.reduce(\n        (prev, curr) => prev.essential || curr.essential\n      ).essential;\n      if (!isAlreadyEssential && currentItem.essential) {\n        // only update it when current item is essential but the one in the final list is not\n        finalList = finalList.map(x =>\n          x.item === currentItem.item ? { ...currentItem } : x\n        );\n      }\n    }\n  }\n  return [].concat(...finalList);\n}\n\nexport function primitiveArraysEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n\n  // Please note that calling sort on an array will modify that array.\n  // you might want to clone your array first.\n  a.sort();\n  b.sort();\n\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\nexport function aggregateChecklists(shelterList, equipmentList, clothingList) {\n  return {\n    shelter: shelterList.map(x => ({\n      text: x.shelter_name,\n      key: x.shelter_name,\n      essential: true\n    })),\n    equipment: equipmentList.map(x => ({\n      text: x.item,\n      key: x.item,\n      essential: x.essential\n    })),\n    clothing: clothingList.map(x => ({\n      text: x.gear_name,\n      key: x.gear_name,\n      essential: true\n    }))\n  };\n}\n","import styled from '@emotion/styled';\n\nconst GroupContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n  max-height: 700px;\n  width: 100%;\n  justify-content: start;\n  padding-left: 1rem;\n`;\n\nconst CheckboxesContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StrikeableText = styled('p')`\n  text-decoration: ${props => (props.isStriked ? 'line-through' : 'none')};\n  font-size: 1.2rem;\n  padding: 0;\n  margin: 0.2rem;\n`;\n\nexport { GroupContainer, CheckboxesContainer, StrikeableText };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StrikeableText } from 'atoms/checklist/index.styles';\nimport { CheckBox } from 'grommet';\n\nfunction ChecklistItem({ text, isChecked, onChange }) {\n  ChecklistItem.propTypes = {\n    text: PropTypes.string.isRequired,\n    isChecked: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n  \n  return (\n    <CheckBox\n      type=\"checkbox\"\n      label={<StrikeableText isStriked={isChecked}>{text}</StrikeableText>}\n      checked={isChecked}\n      onChange={e => onChange(e.target.checked)}\n    />\n  );\n}\n\nexport default ChecklistItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ChecklistItem from 'atoms/checklist/ChecklistItem';\nimport {\n  GroupContainer,\n  CheckboxesContainer\n} from 'atoms/checklist/index.styles';\nimport { Heading } from 'grommet';\n\nfunction ChecklistGroup({ title, items, onChange }) {\n  ChecklistGroup.propTypes = {\n    title: PropTypes.string.isRequired,\n    items: PropTypes.any.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  if (!items.length) return null;\n  \n  return (\n    <GroupContainer>\n      <Heading level={2}>{title}</Heading>\n      <CheckboxesContainer>\n        {items.map(i => (\n          <ChecklistItem\n            key={i.key}\n            text={i.text}\n            isChecked={i.isChecked}\n            onChange={newState => onChange(i.key, newState)}\n          ></ChecklistItem>\n        ))}\n      </CheckboxesContainer>\n    </GroupContainer>\n  );\n}\n\nexport default ChecklistGroup;\n","import { useState, useEffect } from 'react';\n\n// will generate one random gif\nfunction useGiphy(query) {\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [successful, setSuccessful] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      const randomOffset = Math.floor(Math.random() * 100);\n      const response = await fetch(\n        `https://api.giphy.com/v1/gifs/search?api_key=XxwaJMGo8dKhEuNdDVlkTk2DsDdus2Mr&q=${query}&limit=1&offset=${randomOffset}&rating=G&lang=en`\n      );\n      try {\n        const json = await response.json();\n        setSuccessful(true);\n        setResults(\n          json.data.map(item => {\n            return item.images.preview.mp4;\n          })\n        );\n      } catch {\n        setSuccessful(false);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [query]);\n\n  return [results, loading, successful];\n}\n\nexport default useGiphy;","import React, { useState } from 'react';\nimport Questionnaire from 'organisms/questionnaire';\nimport { genWeatherQuestion, genActivities } from 'utils/qaManager';\nimport {\n  filterEquipment,\n  filterShelters,\n  filterGear,\n  aggregateChecklists\n} from 'utils/checklistGenerator';\nimport Card from 'atoms/card';\nimport ChecklistGroup from 'atoms/checklist/ChecklistGroup';\nimport { loadActivities, loadShelters, loadClothing } from 'data/client';\nimport useGiphy from 'utils/useGiphy';\n\nlet weatherQuestion = genWeatherQuestion();\nlet activitiesQuestion = genActivities();\n\nfunction Guide(props) {\n  Guide.propTypes = {};\n  const [isQuestionnaireComplete, setIsQuestionnaireComplete] = useState(false);\n  const [finalList, setFinalList] = useState([]);\n  const [giphyResults, giphyLoading, giphySuccessful] = useGiphy('outdoors');\n\n  function onQuestionnaireComplete(weather, activities) {\n    setIsQuestionnaireComplete(true);\n    let allActivities = loadActivities();\n    let shelters = loadShelters();\n    let clothing = loadClothing();\n\n    let activityIds = activities.map(x => x.value);\n    let matchedEquipment = filterEquipment(allActivities, activityIds);\n    let matchedShelter = filterShelters(shelters, weather);\n    let matchedGear = filterGear(clothing, weather);\n    let list = aggregateChecklists(\n      matchedShelter,\n      matchedEquipment,\n      matchedGear\n    );\n    setFinalList(list);\n  }\n\n  function updateCheckedItems(id, category, checked) {\n    let processed = {\n      ...finalList,\n      [category]: finalList[category].map(x =>\n        x.key === id ? { ...x, isChecked: checked } : x\n      )\n    };\n    setFinalList(processed);\n  }\n\n  return (\n    <div style={{ height: '900px', width: '900px', marginTop: '50px' }}>\n      <div\n        style={{\n          display: isQuestionnaireComplete ? 'none' : 'block',\n          height: '100%'\n        }}\n      >\n        {/* {!giphyLoading && giphySuccessful && (\n          <video autoPlay loop src={giphyResults[0]} />\n        )} */}\n        <Questionnaire\n          weatherQuestion={weatherQuestion}\n          activitiesQuestion={activitiesQuestion}\n          onCompleted={(weather, activities) =>\n            onQuestionnaireComplete(weather, activities)\n          }\n        />\n      </div>\n      <div\n        style={{\n          display: isQuestionnaireComplete ? 'block' : 'none',\n          height: '100%'\n        }}\n      >\n        {isQuestionnaireComplete && (\n          <Card header={'Packing List'}>\n            <ChecklistGroup\n              title={'Shelter'}\n              items={finalList.shelter}\n              onChange={(key, checkedState) => {\n                updateCheckedItems(key, 'shelter', checkedState);\n              }}\n            />\n            <ChecklistGroup\n              title={'Equipment'}\n              items={finalList.equipment}\n              onChange={(key, checkedState) => {\n                updateCheckedItems(key, 'equipment', checkedState);\n              }}\n            />\n            <ChecklistGroup\n              title={'Clothing'}\n              items={finalList.clothing}\n              onChange={(key, checkedState) => {\n                updateCheckedItems(key, 'clothing', checkedState);\n              }}\n            />\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Guide;\n","import React from 'react';\nimport Workspace from 'templates/workspace';\nimport Guide from 'organisms/guide'\n\nfunction PackHelper(props) {\n  return <Workspace size={props.size} mainBox={<Guide/>}/>;\n}\n\nexport default PackHelper;","import React from 'react';\nimport { Global } from '@emotion/core';\nimport { ThemeProvider } from 'emotion-theming';\nimport { Grommet, ResponsiveContext } from 'grommet';\nimport globalStyles from 'base/globalStyles';\nimport theme from 'base/theme';\nimport PackHelper from 'pages/packHelper';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Global styles={globalStyles} />\n      <Grommet theme={theme} full>\n        <ResponsiveContext.Consumer>\n          {size => <PackHelper size={size} />}\n        </ResponsiveContext.Consumer>\n      </Grommet>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}